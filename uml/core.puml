@startuml
'https://plantuml.com/class-diagram

title "コア機能の設計図"

abstract class CarBuilder {
+ SetLeftWheel(wheel: Wheel*)
+ SetRightWheel(wheel: Wheel*)
+ GetLeftWheel(): Wheel*
+ GetRightWheel(): Wheel*
+ Build(): Car*
# left_wheel_: Wheel*
# right_wheel_: Wheel*
}

abstract class Car {
# left_wheel_: Wheel*
# right_wheel_: Wheel*
+ Car(builder: CarBuilder*)
+ UpdateSensors()
+ Think()
+ Act()
}

class Wheel {
- plus_pin_: int
- minus_pin_: int
- pwm_pin_: int
- speed_: int
- direction_: MoveDirection
+ UpdateSpeed(speed: int)
+ UpdateDeltaSpeed(speed: int)
+ UpdateDirection(direction: MoveDirection)
+ Speed(): int
+ Direction(): MoveDirection
}

enum MoveDirection {
    forward
    backward
}

class Sensor {
- pin_: int
- value_: int
+ Sensor(pin: int)
+ Update()
+ RawValue(): int
}

class PhotoReflector {
- theta_: int
+ PhotoReflector(pin: int, theta: int)
+ Value(): BinaryColor
}

enum BinaryColor {
    black
    white
}

interface Brain {
    CalculateNextInstruction(): Instruction*
}

class Instruction {
+ runCoroutine(): int
+ Setup(left_wheel: Wheel*, right_wheel: Wheel*)
+ SetMode(mode: InstructionMode)
+ Mode(): InstructionMode
# left_wheel_: Wheel*
# right_wheel: Wheel*
# mode_: InstructionMode
}

enum InstructionMode {
    none
    interrupt
}


CarBuilder ..> Car
CarBuilder ..> Wheel
'CarBuilder ..> Car
'CarBuilder ..> Wheel
'Car ..> CarBuilder
Car ..> CarBuilder
Car ..> Wheel
Wheel ..> MoveDirection
PhotoReflector --|> Sensor
PhotoReflector ..> BinaryColor
Brain ..> Instruction
Instruction ..> InstructionMode
@enduml